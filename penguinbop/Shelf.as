class Shelf extends MovieClip {			private var _timer:Number;	private var _hiddenY:Number = new Number (-60);	private var _revealY:Number = new Number (0);		public function Shelf () 	{		// Display the shelf for 1 second, then auto-hide if the user doesn't touch it.		this.wait (1, function (target)		{			delete target.onRollOver;			target.tmpIntval = setInterval (function (target)			{				if (target._y == target._hiddenY) {					clearInterval(target.tmpIntval);				}				if (target._hiddenY < target._y)				{					var d = target._y - target._hiddenY;					target._y -= d / 2;					if (d < 3)					{						target._y = target._hiddenY;						target.onRollOver = target.shrunk;					}				}				updateAfterEvent ();			}, 30, target)		});				// Special event handler for initial load.		this.onRollOver = function () {			delete this.onRollOver;			this.onEnterFrame = expanded;			this.stopwaiting();  // just in case they mouse over the shelf quickly.		}			}			// Function to control the smooth collapsing of the shelf	private function collapse (target:MovieClip, newY:Number)	{		target.tmpIntval = setInterval (function (target)		{			if (target._y == newY)			{				clearInterval (target.tmpIntval);			}			if (target._y < newY)			{				var d = newY - target._y;				target._y += d / 2;				if (d < 3)				{					target._y = newY;					clearInterval (target.tmpIntval);					target.onEnterFrame = target.expanded;				}			}			if (newY < target._y)			{				var d = target._y - newY;				target._y -= d / 2;				if (d < 3)				{					target._y = newY;					clearInterval (target.tmpIntval);					target.onRollOver = target.shrunk;				}			}			updateAfterEvent ();		}, 30, target);	};		private function wait (seconds, callBack)	{		this.stop ();		this._timer = setInterval( function( MC ){			clearInterval( MC._timer );			if ( typeof callBack == "function" ) callBack( MC );			else MC.play();		} , seconds * 1000 , this );	};			private function stopwaiting ()	{		this.play ();		clearInterval (this._timer);	};		private function shrunk ()	{		delete this.onRollOver;		collapse (this, _revealY);			};		private function expanded ()	{		if (_root._ymouse > _revealY + this._height + 30)		{			delete this.onEnterFrame;			collapse (this, _hiddenY);		}	};		}